name: Fedora, gcc 13

on:
    push:
      branches: [ master, develop, baseline, feature/** ]
    pull_request:
      branches: [ master, develop, baseline ]

env:
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # this doesn't support specific gcc versions yet
        cxx: [gcc-13]
        cxx_std: [17, 20, 23]
    runs-on: ubuntu-latest
    container: docker.io/library/fedora:latest

    steps:
      - name: Install Dependencies
        run: |
          case "${{ matrix.cxx }}" in
            gcc)
              dnf install -y gcc-c++
              ;;
            gcc-13)
              dnf install -y gcc-c++-13.2.1-3.fc39.x86_64.rpm
              ;;
            clang-16)
              # the llvm-compat-packages copr lacks clang-16 for some reason
              dnf install -y 'dnf-command(copr)'
              dnf copr enable -y @fedora-llvm-team/llvm16
              dnf install -y 'clang-16*'
              ;;
            clang-*)
              VERSION="$(echo "${{ matrix.cxx }}" | sed 's/clang-//')"
              AVAILABLE_VERSION="$(dnf --showduplicates --quiet list clang.x86_64 | awk '{print $2}' | grep "${VERSION}" | sort --version-sort | tail -n 1)"
              if [[ "$AVAILABLE_VERSION" ]]; then
                # use the main repo version if available, because installing
                # the same version from copr may cause library conflicts
                dnf install -y clang
              else
                # official repo from the Fedora llvm team
                # https://copr.fedorainfracloud.org/groups/g/fedora-llvm-team/coprs/
                dnf install -y 'dnf-command(copr)'
                dnf copr enable -y @fedora-llvm-team/llvm-compat-packages
                dnf install -y "$(echo "${{ matrix.cxx }}" | sed 's/-//')"
              fi
              ;;
          esac

          dnf install -y cmake ninja-build git

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure
        run: |
          case "${{ matrix.cxx }}" in
            gcc)
              export CC=gcc
              export CXX=g++
              ;;
            clang-*)
              export CC="${{ matrix.cxx }}"
              export CXX="$(echo "${{ matrix.cxx }}" | sed 's/clang/clang++/')"
              ;;
          esac

          cmake -B build -G Ninja \
           -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
           -DCMAKE_C_COMPILER="${CC}" \
           -DCMAKE_CXX_COMPILER="${CXX}" \
           -DCXX_STD=${{ matrix.cxx_std }}

      - name: Build
        working-directory: build
        run: cmake --build .

      - name: Test
        working-directory: build/test
        run: ctest -C ${{ env.BUILD_TYPE }} -j $(nproc) --output-on-failure
